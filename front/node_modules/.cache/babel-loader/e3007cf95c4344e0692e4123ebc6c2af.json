{"ast":null,"code":"var _jsxFileName = \"D:\\\\ps\\\\React forms\\\\up\\\\front\\\\src\\\\example.js\";\nimport React from \"react\";\nimport Admin from \"react-crud-admin\";\nimport Form from \"react-jsonschema-form\";\nimport axios from \"axios\";\nimport \"react-crud-admin/css\"; //optional css import\n\nexport default class Example extends Admin {\n  constructor() {\n    super();\n    this.name = \"Tenant\";\n    this.name_plural = \"Tenants\";\n    this.list_display_links = [\"name\"];\n    this.list_display = [\"name\", \"code\", \"emailId\", \"city.districtName\"];\n    this.pages_in_pagination = 20;\n  }\n\n  get_queryset(page_number, list_per_page, queryset) {\n    axios.get(\"/masters/pb/tenant/tenants\").then(response => {\n      this.set_queryset(response.data);\n      console.log(\"You is amazee!\");\n    });\n    return queryset;\n  }\n\n  form_submit(form) {\n    let tenant = form.formData;\n\n    if (form.edit) {\n      //var ind=this.state.queryset.indexOf(this.state.object);\n      //console.log(ind);\n      this.response_change(tenant[\"tenants\"]);\n    } else {\n      this.response_add(tenant[\"tenants\"]);\n    }\n  }\n\n  response_add(d) {\n    console.log(d);\n    axios.post(\"/masters/pb/tenant/tenants/add\", {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: d\n    }).then(response => {\n      this.set_queryset(response.data);\n      console.log(typeof response.data);\n      console.log(response.data);\n    });\n    this.setState({\n      object: null,\n      queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\n    });\n  }\n\n  response_change(d) {\n    console.log(d);\n    axios.post(\"/masters/pb/tenant/tenants/update\", {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: d\n    }).then(response => {\n      this.set_queryset(response.data);\n      console.log(typeof response.data);\n      console.log(response.data);\n    });\n    this.setState({\n      object: null,\n      queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\n    });\n  }\n\n  get_form(object = null) {\n    let schema = {\n      \"$schema\": \"http://json-schema.org/schema#\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"tenantId\": {\n          \"type\": \"string\",\n          \"default\": \"pb\"\n        },\n        \"moduleName\": {\n          \"type\": \"string\",\n          \"default\": \"tenant\"\n        },\n        \"tenants\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"code\": {\n              \"type\": \"string\"\n            },\n            \"name\": {\n              \"type\": \"string\"\n            },\n            \"emailId\": {\n              \"type\": \"string\"\n            }\n          },\n          \"city\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"districtCode\": {\n                \"type\": \"string\"\n              },\n              \"districtName\": {\n                \"type\": \"string\"\n              },\n              \"code\": {\n                \"type\": \"string\"\n              }\n            },\n            \"required\": [\"code\", \"districtCode\", \"districtName\", \"name\"]\n          },\n          \"address\": {\n            \"type\": \"string\"\n          },\n          \"contactNumber\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"city\", \"code\", \"contactNumber\", \"name\"]\n      },\n      \"required\": [\"moduleName\", \"tenantId\", \"tenants\"]\n    };\n\n    if (!object) {\n      return /*#__PURE__*/React.createElement(Form, {\n        schema: schema,\n        onSubmit: this.form_submit.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(Form, {\n        schema: schema,\n        formData: object,\n        onSubmit: this.form_submit.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n}","map":{"version":3,"sources":["D:/ps/React forms/up/front/src/example.js"],"names":["React","Admin","Form","axios","Example","constructor","name","name_plural","list_display_links","list_display","pages_in_pagination","get_queryset","page_number","list_per_page","queryset","get","then","response","set_queryset","data","console","log","form_submit","form","tenant","formData","edit","response_change","response_add","d","post","headers","body","setState","object","state","get_form","schema","bind"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Admin from \"react-crud-admin\";\r\nimport Form from \"react-jsonschema-form\";\r\nimport axios from \"axios\";\r\n\r\nimport \"react-crud-admin/css\"; //optional css import\r\n\r\nexport default class Example extends Admin {\r\n  constructor() {\r\n    super();\r\n    this.name = \"Tenant\";\r\n    this.name_plural = \"Tenants\";\r\n    this.list_display_links = [\"name\"];\r\n    this.list_display = [\"name\", \"code\", \"emailId\", \"city.districtName\"];\r\n\r\n    this.pages_in_pagination = 20;\r\n\r\n  }\r\n\r\n\r\n  get_queryset(page_number, list_per_page, queryset) {\r\n    axios.get(\"/masters/pb/tenant/tenants\").then(response => {\r\n\r\n\r\n      this.set_queryset(response.data);\r\n      console.log(\"You is amazee!\");\r\n\r\n    });\r\n\r\n    return queryset;\r\n\r\n\r\n  }\r\n\r\n  form_submit(form) {\r\n    let tenant = form.formData;\r\n\r\n    if (form.edit) {\r\n      //var ind=this.state.queryset.indexOf(this.state.object);\r\n      //console.log(ind);\r\n      this.response_change(tenant[\"tenants\"]);\r\n    }\r\n    else {\r\n\r\n      this.response_add(tenant[\"tenants\"]);\r\n    }\r\n  }\r\n\r\n\r\n  response_add(d) {\r\n    console.log(d);\r\n    axios.post(\"/masters/pb/tenant/tenants/add\", {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: d\r\n    }).then(response => {\r\n\r\n\r\n      this.set_queryset(response.data);\r\n\r\n      console.log(typeof (response.data));\r\n      console.log(response.data);\r\n\r\n    });\r\n\r\n    this.setState({\r\n      object: null,\r\n      queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\r\n    });\r\n  }\r\n\r\n  response_change(d) {\r\n    console.log(d);\r\n    axios.post(\"/masters/pb/tenant/tenants/update\", {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: d\r\n    }).then(response => {\r\n\r\n\r\n      this.set_queryset(response.data);\r\n\r\n      console.log(typeof (response.data));\r\n      console.log(response.data);\r\n\r\n    });\r\n    this.setState({\r\n      object: null,\r\n      queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\r\n    });\r\n  }\r\n\r\n  get_form(object = null) {\r\n    let schema = {\r\n      \"$schema\": \"http://json-schema.org/schema#\",\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"tenantId\": {\r\n          \"type\": \"string\",\r\n          \"default\": \"pb\"\r\n        },\r\n        \"moduleName\": {\r\n          \"type\": \"string\",\r\n          \"default\": \"tenant\"\r\n        },\r\n        \"tenants\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"code\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"name\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"emailId\": {\r\n              \"type\": \"string\"\r\n            },\r\n            },\r\n            \"city\": {\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"name\": {\r\n                  \"type\": \"string\"\r\n                },\r\n                \r\n                \"districtCode\": {\r\n                  \"type\": \"string\"\r\n                },\r\n                \"districtName\": {\r\n                  \"type\": \"string\"\r\n                },\r\n        \r\n                \"code\": {\r\n                  \"type\": \"string\"\r\n                }\r\n              },\r\n              \"required\": [\r\n\r\n                \"code\",\r\n               \r\n                \"districtCode\",\r\n                \"districtName\",\r\n                \r\n                \"name\"\r\n                \r\n              ]\r\n            },\r\n            \"address\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"contactNumber\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"required\": [\r\n            \r\n            \"city\",\r\n            \"code\",\r\n            \"contactNumber\",\r\n            \r\n            \"name\",\r\n\r\n            \r\n          ]\r\n\r\n        }\r\n      ,\r\n      \"required\": [\r\n        \"moduleName\",\r\n        \"tenantId\",\r\n        \"tenants\"\r\n      ]\r\n    };\r\n\r\n    if (!object) {\r\n      return <Form schema={schema} onSubmit={this.form_submit.bind(this)} />;\r\n    } else {\r\n      return <Form schema={schema} formData={object} onSubmit={this.form_submit.bind(this)} />;\r\n    }\r\n  }\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}