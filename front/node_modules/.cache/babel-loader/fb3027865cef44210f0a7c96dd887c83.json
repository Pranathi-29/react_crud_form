{"ast":null,"code":"var _jsxFileName = \"D:\\\\ps\\\\React forms\\\\new_up\\\\front\\\\src\\\\ui.js\";\nimport React from \"react\";\nimport Admin from \"react-crud-admin\";\nimport Form from \"react-jsonschema-form\";\nimport axios from \"axios\";\nimport \"react-crud-admin/css\"; //optional css import\n\nconst _ = require(\"lodash\");\n\nfunction paginate(array, page_size, page_number) {\n  // human-readable page numbers usually start with 1, so we reduce 1 in the first argument\n  return array.slice((page_number - 1) * page_size, page_number * page_size);\n}\n\nexport default class Example extends Admin {\n  constructor() {\n    super();\n    this.name = \"Tenant\";\n    this.name_plural = \"Tenants\";\n    this.list_display_links = [\"moduleName\"];\n    this.list_display = [\"moduleName\", \"tenantId\", \"master\"];\n    this.list_per_page = 10;\n  }\n\n  get_queryset(page_number, list_per_page, queryset) {\n    axios.get(\"/\", {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      /* let data = paginate(response.data, list_per_page, page_number)\r\n      this.set_queryset(data);\r\n      this.set_total(response.data.length);\r\n      this.pages_in_pagination = response.data.length / list_per_page;\r\n      console.log(\"You is amazee!\"); */\n      console.log(typeof response.data);\n      var p = JSON.parse(response.data);\n      queryset = p;\n    });\n    return queryset;\n  }\n\n  form_submit(form) {\n    let tenant = form.formData;\n\n    if (form.edit) {\n      console.log(\"This is a edit\", tenant);\n      this.state.queryset.splice(this.state.queryset.indexOf(this.state.object), 1, tenant); //var ind=this.state.queryset.indexOf(this.state.object);\n      //console.log(ind);\n\n      this.response_change(tenant);\n    } else {\n      this.response_add(tenant);\n    }\n  }\n\n  response_add(d) {\n    console.log(d);\n    axios.post(\"/masters/pb/tenant/tenants/add\", {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: d\n    }).then(response => {\n      this.set_queryset(response.data);\n      console.log(typeof response.data);\n      console.log(response.data);\n    });\n    this.setState({\n      object: null,\n      queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\n    });\n  }\n\n  response_change(d) {\n    console.log(d);\n    axios.post(\"/masters/pb/tenant/tenants/update\", {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: d\n    }).then(response => {\n      this.set_queryset(response.data);\n      console.log(typeof response.data);\n      console.log(response.data);\n    });\n    this.setState({\n      object: null,\n      queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\n    });\n  }\n\n  get_actions() {\n    return {\n      \"delete\": selected_objects => {\n        console.log(selected_objects);\n        axios.post(\"/masters/pb/tenant/tenants/delete\", {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: selected_objects\n        }).then(response => {\n          this.set_queryset(response.data);\n          console.log(typeof response.data);\n          console.log(response.data);\n        }); //this.set_queryset(this.get_queryset());\n\n        this.setState({\n          queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\n        });\n      }\n    };\n  }\n\n  render_list_view() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, this.render_add_button(), this.render_below_add_button(), this.render_search_field(), this.render_below_search_field(), this.render_actions(), this.render_below_actions(), this.render_filters(), this.render_below_filters(), this.render_table(), this.render_add_button(), this.render_below_table(), this.render_progress(this.state.loading), this.render_below_progress(), this.render_pagination());\n  }\n\n  action_selected(event) {\n    let action = event.target.value;\n    console.log(this.state.selected_objects.getItems());\n    this.get_actions()[action](this.state.selected_objects.getItems());\n    this.get_queryset(this.state.page_number, this.get_list_per_page());\n  }\n\n  render_actions() {\n    return /*#__PURE__*/React.createElement(\"select\", {\n      className: \"ra-action-button\",\n      onChange: this.action_selected.bind(this),\n      defaultValue: \"\",\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      key: \"key\",\n      selected: true,\n      value: \"\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    }, \"Choose an action\"), _.keys(this.get_actions()).map(action => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: action,\n        value: action,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }\n      }, \" \", _.startCase(action));\n    }));\n  }\n\n  get_form(object = null) {\n    // TODO:\n    // read params tenantId, module, master\n    // load schema using API for tenantId, module and master\n    // use that schema for editing\n    let schema = {\n      \"$schema\": \"http://json-schema.org/schema#\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"code\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"emailId\": {\n          \"type\": \"string\"\n        },\n        \"city\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\"\n            },\n            \"districtCode\": {\n              \"type\": \"string\"\n            },\n            \"districtName\": {\n              \"type\": \"string\"\n            },\n            \"code\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\"code\", \"districtCode\", \"districtName\", \"name\"]\n        }\n      }\n    }; // add support for custom epoch field\n\n    if (!object) {\n      return /*#__PURE__*/React.createElement(Form, {\n        schema: schema,\n        onSubmit: this.form_submit.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 14\n        }\n      });\n    } else {\n      console.log(\"return form with data\", object);\n      return /*#__PURE__*/React.createElement(Form, {\n        schema: schema,\n        formData: object,\n        onSubmit: this.form_submit.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n}","map":{"version":3,"sources":["D:/ps/React forms/new_up/front/src/ui.js"],"names":["React","Admin","Form","axios","_","require","paginate","array","page_size","page_number","slice","Example","constructor","name","name_plural","list_display_links","list_display","list_per_page","get_queryset","queryset","get","headers","then","response","console","log","data","p","JSON","parse","form_submit","form","tenant","formData","edit","state","splice","indexOf","object","response_change","response_add","d","post","body","set_queryset","setState","get_actions","selected_objects","render_list_view","render_add_button","render_below_add_button","render_search_field","render_below_search_field","render_actions","render_below_actions","render_filters","render_below_filters","render_table","render_below_table","render_progress","loading","render_below_progress","render_pagination","action_selected","event","action","target","value","getItems","get_list_per_page","bind","keys","map","startCase","get_form","schema"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Admin from \"react-crud-admin\";\r\nimport Form from \"react-jsonschema-form\";\r\nimport axios from \"axios\";\r\n\r\n\r\nimport \"react-crud-admin/css\"; //optional css import\r\nconst _ = require(\"lodash\");\r\nfunction paginate(array, page_size, page_number) {\r\n  // human-readable page numbers usually start with 1, so we reduce 1 in the first argument\r\n  return array.slice((page_number - 1) * page_size, page_number * page_size);\r\n}\r\n\r\n\r\nexport default class Example extends Admin {\r\n  constructor() {\r\n    super();\r\n    this.name = \"Tenant\";\r\n    this.name_plural = \"Tenants\";\r\n    this.list_display_links = [\"moduleName\"];\r\n    this.list_display = [\"moduleName\",  \"tenantId\", \"master\"];\r\n   \r\n    this.list_per_page = 10;\r\n    \r\n  }\r\n\r\n\r\n  get_queryset(page_number, list_per_page, queryset) {\r\n\r\n\r\n    axios.get(\"/\",{\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(response => {\r\n\r\n      /* let data = paginate(response.data, list_per_page, page_number)\r\n      this.set_queryset(data);\r\n      this.set_total(response.data.length);\r\n      this.pages_in_pagination = response.data.length / list_per_page;\r\n      console.log(\"You is amazee!\"); */\r\n      console.log(typeof(response.data));\r\n      var p=JSON.parse(response.data)\r\n      queryset=p;\r\n\r\n    });\r\n\r\n    return queryset;\r\n\r\n\r\n  }\r\n\r\n  form_submit(form) {\r\n    let tenant = form.formData;\r\n\r\n    if (form.edit) {\r\n      console.log(\"This is a edit\", tenant)\r\n      this.state.queryset.splice(this.state.queryset.indexOf(this.state.object), 1, tenant);\r\n\r\n      //var ind=this.state.queryset.indexOf(this.state.object);\r\n      //console.log(ind);\r\n      this.response_change(tenant);\r\n    }\r\n    else {\r\n\r\n      this.response_add(tenant);\r\n    }\r\n  }\r\n\r\n\r\n  response_add(d) {\r\n    console.log(d);\r\n    axios.post(\"/masters/pb/tenant/tenants/add\", {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: d\r\n    }).then(response => {\r\n\r\n\r\n      this.set_queryset(response.data);\r\n\r\n      console.log(typeof (response.data));\r\n      console.log(response.data);\r\n\r\n    });\r\n\r\n    this.setState({\r\n      object: null,\r\n      queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\r\n    });\r\n  }\r\n\r\n  response_change(d) {\r\n    console.log(d);\r\n    axios.post(\"/masters/pb/tenant/tenants/update\", {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: d\r\n    }).then(response => {\r\n\r\n\r\n      this.set_queryset(response.data);\r\n\r\n      console.log(typeof (response.data));\r\n      console.log(response.data);\r\n\r\n    });\r\n    this.setState({\r\n      object: null,\r\n      queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\r\n    });\r\n  }\r\n\r\n  get_actions() {\r\n    return {\r\n      \"delete\": (selected_objects) => {\r\n        console.log(selected_objects);\r\n\r\n        axios.post(\"/masters/pb/tenant/tenants/delete\", {\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: selected_objects\r\n        }).then(response => {\r\n\r\n\r\n          this.set_queryset(response.data);\r\n          console.log(typeof (response.data));\r\n          console.log(response.data);\r\n\r\n        })\r\n\r\n\r\n        //this.set_queryset(this.get_queryset());\r\n        this.setState({\r\n\r\n          queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\r\n        });\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n  render_list_view() {\r\n    return (\r\n      <div>\r\n        {this.render_add_button()}\r\n        {this.render_below_add_button()}\r\n        {this.render_search_field()}\r\n        {this.render_below_search_field()}\r\n        {this.render_actions()}\r\n        {this.render_below_actions()}\r\n        {this.render_filters()}\r\n        {this.render_below_filters()}\r\n        {this.render_table()}\r\n        {this.render_add_button()}\r\n        {this.render_below_table()}\r\n        {this.render_progress(this.state.loading)}\r\n        {this.render_below_progress()}\r\n        {this.render_pagination()}\r\n      </div>\r\n    );\r\n  }\r\n  action_selected(event) {\r\n    let action = event.target.value;\r\n \r\n    console.log(this.state.selected_objects.getItems());\r\n    this.get_actions()[action](this.state.selected_objects.getItems());\r\n    this.get_queryset(this.state.page_number, this.get_list_per_page());\r\n  }\r\n\r\n  \r\n  render_actions() {\r\n    \r\n    return (\r\n      <select\r\n        className=\"ra-action-button\"\r\n        onChange={this.action_selected.bind(this)}\r\n        defaultValue={\"\"}\r\n        value=\"\"\r\n         \r\n      >\r\n        <option key=\"key\" selected value=\"\" disabled={true}>\r\n          Choose an action\r\n        </option>\r\n        {_.keys(this.get_actions()).map(action => {\r\n          return (\r\n            <option key={action} value={action}>\r\n              {\" \"}\r\n              {_.startCase(action)}\r\n            </option>\r\n            \r\n          );\r\n        })}\r\n      \r\n      </select>\r\n    );\r\n  }\r\n\r\n  get_form(object = null) {\r\n\r\n    // TODO:\r\n    // read params tenantId, module, master\r\n    // load schema using API for tenantId, module and master\r\n    // use that schema for editing\r\n    let schema = {\r\n      \"$schema\": \"http://json-schema.org/schema#\",\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"code\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"emailId\": {\r\n          \"type\": \"string\"\r\n        },\r\n\r\n\r\n        \"city\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"name\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"districtCode\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"districtName\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"code\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"required\": [\r\n            \"code\",\r\n            \"districtCode\",\r\n            \"districtName\",\r\n            \"name\"\r\n          ]\r\n        }\r\n      }\r\n    };\r\n\r\n    // add support for custom epoch field\r\n  \r\n    if (!object) {\r\n      return <Form schema={schema} onSubmit={this.form_submit.bind(this)} />;\r\n    } else {\r\n      console.log(\"return form with data\", object);\r\n      return <Form schema={schema} formData={object} onSubmit={this.form_submit.bind(this)} />;\r\n    }\r\n  }\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}