{"ast":null,"code":"var _jsxFileName = \"D:\\\\ps\\\\React forms\\\\new_up\\\\front\\\\src\\\\ui.js\";\nimport React from \"react\";\nimport Admin from \"react-crud-admin\";\nimport Form from \"react-jsonschema-form\";\nimport axios from \"axios\";\nimport Select from 'react-select';\nimport Master from \"./master.js\";\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\nimport \"react-crud-admin/css\"; //optional css import\n\nconst _ = require(\"lodash\");\n\nfunction paginate(array, page_size, page_number) {\n  // human-readable page numbers usually start with 1, so we reduce 1 in the first argument\n  return array.slice((page_number - 1) * page_size, page_number * page_size);\n}\n\nexport default class Main extends Admin {\n  constructor() {\n    super();\n    this.name = \"Tenant\";\n    this.name_plural = \"Tenants\";\n    this.list_display_links = [\"master\"];\n    this.list_display = [\"master\", \"moduleName\", \"tenantId\"];\n    this.list_per_page = 10;\n    this.showMaster = false;\n    this._handleClick = this._handleClick.bind(this);\n  }\n\n  get_queryset(page_number, list_per_page, queryset) {\n    axios.get(\"/masters\", {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      /* let data = paginate(response.data, list_per_page, page_number)\r\n      this.set_queryset(data);\r\n      this.set_total(response.data.length);\r\n      this.pages_in_pagination = response.data.length / list_per_page;\r\n      console.log(\"You is amazee!\"); */\n      console.log(typeof response.data);\n      console.log(response.data);\n      this.set_queryset(response.data);\n    });\n    return queryset;\n  }\n\n  form_submit(form) {\n    let tenant = form.formData;\n\n    if (form.edit) {\n      console.log(\"This is a edit\", tenant);\n      this.state.queryset.splice(this.state.queryset.indexOf(this.state.object), 1, tenant); //var ind=this.state.queryset.indexOf(this.state.object);\n      //console.log(ind);\n\n      this.response_change(tenant);\n    } else {\n      this.response_add(tenant);\n    }\n  }\n\n  response_add(d) {\n    console.log(d);\n    axios.post(\"/masters/pb/tenant/tenants/add\", {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: d\n    }).then(response => {\n      this.set_queryset(response.data);\n      console.log(typeof response.data);\n      console.log(response.data);\n    });\n    this.setState({\n      object: null,\n      queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\n    });\n  }\n\n  response_change(d) {\n    console.log(d);\n    axios.post(\"/masters/pb/tenant/tenants/update\", {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: d\n    }).then(response => {\n      this.set_queryset(response.data);\n      console.log(typeof response.data);\n      console.log(response.data);\n    });\n    this.setState({\n      object: null,\n      queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\n    });\n  }\n\n  get_actions() {\n    return {\n      \"delete\": selected_objects => {\n        console.log(selected_objects);\n        axios.post(\"/masters/pb/tenant/tenants/delete\", {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: selected_objects\n        }).then(response => {\n          this.set_queryset(response.data);\n          console.log(typeof response.data);\n          console.log(response.data);\n        }); //this.set_queryset(this.get_queryset());\n\n        this.setState({\n          queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\n        });\n      }\n    };\n  }\n\n  render_list_view() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }\n    }, this.render_add_button(), this.render_below_add_button(), this.render_search_field(), this.render_below_search_field(), this.render_actions(), this.render_below_actions(), this.render_filters(), this.render_below_filters(), this.render_table(), this.render_add_button(), this.render_below_table(), this.render_progress(this.state.loading), this.render_below_progress(), this.render_pagination());\n  }\n\n  action_selected(event) {\n    let action = event.target.value;\n    console.log(this.state.selected_objects.getItems());\n    this.get_actions()[action](this.state.selected_objects.getItems());\n    this.get_queryset(this.state.page_number, this.get_list_per_page());\n  }\n\n  render_actions() {\n    return /*#__PURE__*/React.createElement(\"select\", {\n      className: \"ra-action-button\",\n      onChange: this.action_selected.bind(this),\n      defaultValue: \"\",\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      key: \"key\",\n      selected: true,\n      value: \"\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }\n    }, \"Choose an action\"), _.keys(this.get_actions()).map(action => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: action,\n        value: action,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }\n      }, \" \", _.startCase(action));\n    }));\n  }\n\n  _handle_filter_change(values) {\n    if (!(values instanceof Array) && values != null) {\n      values = [values];\n    }\n\n    this.setState({\n      filter_values: values || []\n    });\n\n    if (values == null || values.length <= 0) {\n      this.set_queryset(this.get_queryset(this.state.page_number, this.get_list_per_page(), this.state.queryset));\n      return;\n    }\n\n    let filters = this.get_filters();\n\n    for (let value of values) {\n      let queryset = filters[value._filter_].filter_function(value, this.state.queryset);\n\n      this.setState({\n        queryset: queryset\n      });\n    }\n  }\n\n  get_filters() {\n    return {\n      by_master_name: {\n        options: [{\n          value: \"FireCess\",\n          label: \"FireCess\"\n        }, {\n          value: \"boundary-data\",\n          label: \"boundary-data\"\n        }],\n        filter_function: (option, queryset) => {\n          let grouped = _.groupBy(queryset, \"master\");\n\n          return _.has(grouped, option.value) ? grouped[option.value] : [];\n        }\n      },\n      by_module_name: {\n        options: [{\n          value: \"PropertyTax\",\n          label: \"PropertyTax\"\n        }, {\n          value: \"egov-location\",\n          label: \"egov-location\"\n        }],\n        filter_function: (option, queryset) => {\n          let grouped = _.groupBy(queryset, \"moduleName\");\n\n          return _.has(grouped, option.value) ? grouped[option.value] : [];\n        }\n      }\n    };\n  }\n\n  _get_table_body() {\n    return this._get_ordered_queryset().map((object, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: \"row-\" + i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 9\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: i + \"_checkbox\",\n        onChange: this._select_one(object),\n        checked: this.state.selected_objects.contains(object),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }\n      }), \" \", /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: i + \"_checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }\n      }, \"\\xA0\"), \" \"), this.get_list_display().map(item => {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: item,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }\n        }, \" \", this.get_list_display_links().find(a => {\n          return item == a;\n        }) ? this._create_object_link(object, this._display_field(object, item)) : this._display_field(object, item), \" \");\n      }));\n    });\n  }\n\n  _create_object_link(object, label) {\n    //this.setState({ viewMaster: false });\n    if (this.has_change_permission(object)) {\n      return (\n        /*#__PURE__*/\n\n        /*<a href={object.tenantId.split('.').pop()+\"/\"+object.moduleName+\"/\"+object.master}>\r\n         <a onClick={this._object_link_clicked(object)} href=\"#\"> */\n        React.createElement(\"a\", {\n          href: \"masters/\" + object.tenantId.split('.').pop() + \"/\" + object.moduleName + \"/\" + object.master,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 9\n          }\n        }, \" \", label, \" \")\n      );\n    } else {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 12\n        }\n      }, \" \", label, \" \");\n    }\n  }\n\n  _get_table_body() {\n    return this._get_ordered_queryset().map((object, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: \"row-\" + i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: i + \"_checkbox\",\n        onChange: this._select_one(object),\n        checked: this.state.selected_objects.contains(object),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }\n      }), \" \", /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: i + \"_checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }\n      }, \"\\xA0\"), \" \"), this.get_list_display().map(item => {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: item,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }\n        }, \" \", this.get_list_display_links().find(a => {\n          return item == a;\n        }) ? this._create_object_link(object, this._display_field(object, item)) : this._display_field(object, item), \" \");\n      }));\n    });\n  }\n\n  componentDidMount() {\n    axios.get(\"/schema/PropertyTax/FireCess\", {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      console.log(typeof response.data);\n      console.log(response.data);\n      this.schema = response.data;\n    });\n  }\n\n  get_form(object = null) {\n    // TODO:\n    // read params tenantId, module, master\n    // load schema using API for tenantId, module and master\n    // use that schema for editing\n    if (!object) {\n      return /*#__PURE__*/React.createElement(Form, {\n        schema: this.schema,\n        onSubmit: this.form_submit.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 14\n        }\n      });\n    } else {\n      console.log(\"return form with data\", object);\n      return /*#__PURE__*/React.createElement(Form, {\n        schema: this.schema,\n        formData: object,\n        onSubmit: this.form_submit.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n  _handleClick() {\n    this.setState({\n      showMaster: true\n    });\n  }\n\n  render() {\n    if (!this.has_module_permission()) {\n      return this.render_permission_denied();\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"react-crud-admin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 12\n      }\n    }, this.render_list_page());\n  }\n\n}","map":{"version":3,"sources":["D:/ps/React forms/new_up/front/src/ui.js"],"names":["React","Admin","Form","axios","Select","Master","BrowserRouter","Route","Link","Switch","_","require","paginate","array","page_size","page_number","slice","Main","constructor","name","name_plural","list_display_links","list_display","list_per_page","showMaster","_handleClick","bind","get_queryset","queryset","get","headers","then","response","console","log","data","set_queryset","form_submit","form","tenant","formData","edit","state","splice","indexOf","object","response_change","response_add","d","post","body","setState","get_actions","selected_objects","render_list_view","render_add_button","render_below_add_button","render_search_field","render_below_search_field","render_actions","render_below_actions","render_filters","render_below_filters","render_table","render_below_table","render_progress","loading","render_below_progress","render_pagination","action_selected","event","action","target","value","getItems","get_list_per_page","keys","map","startCase","_handle_filter_change","values","Array","filter_values","length","filters","get_filters","_filter_","filter_function","by_master_name","options","label","option","grouped","groupBy","has","by_module_name","_get_table_body","_get_ordered_queryset","i","_select_one","contains","get_list_display","item","get_list_display_links","find","a","_create_object_link","_display_field","has_change_permission","tenantId","split","pop","moduleName","master","componentDidMount","schema","get_form","render","has_module_permission","render_permission_denied","render_list_page"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Admin from \"react-crud-admin\";\r\nimport Form from \"react-jsonschema-form\";\r\nimport axios from \"axios\";\r\nimport Select from 'react-select';\r\nimport Master from \"./master.js\";\r\n\r\nimport { BrowserRouter, Route,Link, Switch } from \"react-router-dom\";\r\n\r\nimport \"react-crud-admin/css\"; //optional css import\r\nconst _ = require(\"lodash\");\r\nfunction paginate(array, page_size, page_number) {\r\n  // human-readable page numbers usually start with 1, so we reduce 1 in the first argument\r\n  return array.slice((page_number - 1) * page_size, page_number * page_size);\r\n}\r\n\r\n\r\nexport default class Main extends Admin {\r\n  constructor() {\r\n    super();\r\n   \r\n    \r\n    this.name = \"Tenant\";\r\n    this.name_plural = \"Tenants\";\r\n    this.list_display_links = [\"master\"];\r\n    this.list_display = [\"master\",\"moduleName\",  \"tenantId\"];\r\n   \r\n    this.list_per_page = 10;\r\n  \r\n    \r\n    this.showMaster=false;\r\n    this._handleClick = this._handleClick.bind(this);\r\n  }\r\n  \r\n\r\n  get_queryset(page_number, list_per_page, queryset) {\r\n\r\n\r\n    axios.get(\"/masters\",{\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      }\r\n    \r\n    }).then(response => {\r\n\r\n      /* let data = paginate(response.data, list_per_page, page_number)\r\n      this.set_queryset(data);\r\n      this.set_total(response.data.length);\r\n      this.pages_in_pagination = response.data.length / list_per_page;\r\n      console.log(\"You is amazee!\"); */\r\n      console.log(typeof(response.data));\r\n      console.log(response.data);\r\n      this.set_queryset(response.data);\r\n\r\n    });\r\n\r\n    return queryset;\r\n\r\n\r\n  }\r\n\r\n  form_submit(form) {\r\n    let tenant = form.formData;\r\n\r\n    if (form.edit) {\r\n      console.log(\"This is a edit\", tenant)\r\n      this.state.queryset.splice(this.state.queryset.indexOf(this.state.object), 1, tenant);\r\n\r\n      //var ind=this.state.queryset.indexOf(this.state.object);\r\n      //console.log(ind);\r\n      this.response_change(tenant);\r\n    }\r\n    else {\r\n\r\n      this.response_add(tenant);\r\n    }\r\n  }\r\n\r\n\r\n  response_add(d) {\r\n    console.log(d);\r\n    axios.post(\"/masters/pb/tenant/tenants/add\", {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: d\r\n    }).then(response => {\r\n\r\n\r\n      this.set_queryset(response.data);\r\n\r\n      console.log(typeof (response.data));\r\n      console.log(response.data);\r\n\r\n    });\r\n\r\n    this.setState({\r\n      object: null,\r\n      queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\r\n    });\r\n  }\r\n\r\n  response_change(d) {\r\n    console.log(d);\r\n    axios.post(\"/masters/pb/tenant/tenants/update\", {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: d\r\n    }).then(response => {\r\n\r\n\r\n      this.set_queryset(response.data);\r\n\r\n      console.log(typeof (response.data));\r\n      console.log(response.data);\r\n\r\n    });\r\n    this.setState({\r\n      object: null,\r\n      queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\r\n    });\r\n  }\r\n\r\n  get_actions() {\r\n    return {\r\n      \"delete\": (selected_objects) => {\r\n        console.log(selected_objects);\r\n\r\n        axios.post(\"/masters/pb/tenant/tenants/delete\", {\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: selected_objects\r\n        }).then(response => {\r\n\r\n\r\n          this.set_queryset(response.data);\r\n          console.log(typeof (response.data));\r\n          console.log(response.data);\r\n\r\n        })\r\n\r\n\r\n        //this.set_queryset(this.get_queryset());\r\n        this.setState({\r\n\r\n          queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\r\n        });\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n  render_list_view() {\r\n    return (\r\n      <div>\r\n        {this.render_add_button()}\r\n        {this.render_below_add_button()}\r\n        {this.render_search_field()}\r\n        {this.render_below_search_field()}\r\n        {this.render_actions()}\r\n        {this.render_below_actions()}\r\n        {this.render_filters()}\r\n        {this.render_below_filters()}\r\n        {this.render_table()}\r\n        {this.render_add_button()}\r\n        {this.render_below_table()}\r\n        {this.render_progress(this.state.loading)}\r\n        {this.render_below_progress()}\r\n        {this.render_pagination()}\r\n      </div>\r\n    );\r\n  }\r\n  action_selected(event) {\r\n    let action = event.target.value;\r\n \r\n    console.log(this.state.selected_objects.getItems());\r\n    this.get_actions()[action](this.state.selected_objects.getItems());\r\n    this.get_queryset(this.state.page_number, this.get_list_per_page());\r\n  }\r\n\r\n  \r\n  render_actions() {\r\n    \r\n    return (\r\n      <select\r\n        className=\"ra-action-button\"\r\n        onChange={this.action_selected.bind(this)}\r\n        defaultValue={\"\"}\r\n        value=\"\"\r\n         \r\n      >\r\n        <option key=\"key\" selected value=\"\" disabled={true}>\r\n          Choose an action\r\n        </option>\r\n        {_.keys(this.get_actions()).map(action => {\r\n          return (\r\n            <option key={action} value={action}>\r\n              {\" \"}\r\n              {_.startCase(action)}\r\n            </option>\r\n            \r\n          );\r\n        })}\r\n      \r\n      </select>\r\n    );\r\n    \r\n  }\r\n\r\n  _handle_filter_change(values) {\r\n    if (!(values instanceof Array) && values != null) {\r\n      values = [values];\r\n    }\r\n \r\n    this.setState({ filter_values: values || [] });\r\n \r\n    if (values == null || values.length <= 0) {\r\n      this.set_queryset(\r\n        this.get_queryset(\r\n          this.state.page_number,\r\n          this.get_list_per_page(),\r\n          this.state.queryset\r\n        )\r\n      );\r\n      return;\r\n    }\r\n \r\n    let filters = this.get_filters();\r\n    for (let value of values) {\r\n      let queryset = filters[value._filter_].filter_function(\r\n        value,\r\nthis.state.queryset\r\n      );\r\n      this.setState({ queryset: queryset });\r\n    }\r\n  }\r\n\r\n  get_filters()\r\n{\r\n  \r\n  \r\n  return {\r\n    \r\n    by_master_name: {\r\n       options: [\r\n        { value: \"FireCess\", label: \"FireCess\" },\r\n        { value: \"boundary-data\", label: \"boundary-data\" }\r\n      ], \r\n      filter_function: (option, queryset) => {\r\n        let grouped = _.groupBy(queryset, \"master\");\r\n        \r\n\r\n        return _.has(grouped, option.value) ? grouped[option.value] : [];\r\n      }\r\n    },\r\n     by_module_name: {\r\n      options: [\r\n        { value: \"PropertyTax\", label: \"PropertyTax\" },\r\n        { value: \"egov-location\", label: \"egov-location\" }\r\n      ],\r\n      filter_function: (option, queryset) => {\r\n        let grouped = _.groupBy(queryset, \"moduleName\");\r\n\r\n        return _.has(grouped, option.value) ? grouped[option.value] : [];\r\n      }\r\n    } \r\n    \r\n  };\r\n}\r\n\r\n_get_table_body() {\r\n  return this._get_ordered_queryset().map((object, i) => {\r\n    return (\r\n      <tr key={\"row-\" + i}>\r\n        <td>\r\n          {\" \"}\r\n          <input\r\n            type=\"checkbox\"\r\n            id={i + \"_checkbox\"}\r\n            onChange={this._select_one(object)}\r\n            checked={this.state.selected_objects.contains(object)}\r\n          />{\" \"}\r\n          <label htmlFor={i + \"_checkbox\"}>&nbsp;</label>{\" \"}\r\n        </td>\r\n        {this.get_list_display().map(item => {\r\n          return (\r\n            <td key={item}>\r\n            \r\n              {\" \"}\r\n              {this.get_list_display_links().find(a => {\r\n                return item == a;\r\n              })\r\n                ? this._create_object_link(\r\n                    object,\r\n                    this._display_field(object, item)\r\n                  )\r\n                : this._display_field(object, item)}{\" \"}\r\n            </td>\r\n          );\r\n        })}\r\n      </tr>\r\n    );\r\n  });\r\n}\r\n\r\n\r\n_create_object_link(object, label) {\r\n  //this.setState({ viewMaster: false });\r\n  if (this.has_change_permission(object)) {\r\n    return (\r\n      /*<a href={object.tenantId.split('.').pop()+\"/\"+object.moduleName+\"/\"+object.master}>\r\n       <a onClick={this._object_link_clicked(object)} href=\"#\"> */\r\n        <a href={\"masters/\"+object.tenantId.split('.').pop()+\"/\"+object.moduleName+\"/\"+object.master}>\r\n        {\" \"}\r\n        {label}{\" \"}\r\n      </a>  \r\n       \r\n      \r\n      \r\n      \r\n\r\n      \r\n    );\r\n  } else {\r\n    return <span> {label} </span>;}\r\n  }\r\n  _get_table_body() {\r\n    return this._get_ordered_queryset().map((object, i) => {\r\n      return (\r\n        <tr key={\"row-\" + i}>\r\n          <td>\r\n            {\" \"}\r\n            <input\r\n              type=\"checkbox\"\r\n              id={i + \"_checkbox\"}\r\n              onChange={this._select_one(object)}\r\n              checked={this.state.selected_objects.contains(object)}\r\n            />{\" \"}\r\n            <label htmlFor={i + \"_checkbox\"}>&nbsp;</label>{\" \"}\r\n          </td>\r\n          {this.get_list_display().map(item => {\r\n            return (\r\n              <td key={item}>\r\n                {\" \"}\r\n                {this.get_list_display_links().find(a => {\r\n                  return item == a;\r\n                })\r\n                  ? this._create_object_link(\r\n                      object,\r\n                      this._display_field(object, item)\r\n                    )\r\n                    \r\n                  : this._display_field(object, item)}{\" \"}\r\n              </td>\r\n            );\r\n          })}\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n  componentDidMount(){\r\n    axios.get(\"/schema/PropertyTax/FireCess\",{\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      }\r\n    \r\n    }).then(response => {\r\n    \r\n      console.log(typeof(response.data));\r\n      console.log(response.data);\r\n      this.schema=response.data;\r\n      \r\n    });\r\n  }\r\n\r\n  get_form(object = null) {\r\n\r\n    // TODO:\r\n    // read params tenantId, module, master\r\n    // load schema using API for tenantId, module and master\r\n    // use that schema for editing\r\n\r\n  \r\n    if (!object) {\r\n      return <Form schema={this.schema} onSubmit={this.form_submit.bind(this)} />;\r\n    } else {\r\n      console.log(\"return form with data\", object);\r\n      return <Form schema={this.schema} formData={object} onSubmit={this.form_submit.bind(this)} />;\r\n    } \r\n  }\r\n  _handleClick() {\r\n    this.setState({\r\n      showMaster: true,\r\n    });\r\n  }\r\n  render() {\r\n    if (!this.has_module_permission()) {\r\n      return this.render_permission_denied();\r\n    }\r\n    return <div id=\"react-crud-admin\">{this.render_list_page()}</div>;\r\n\r\n    \r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}