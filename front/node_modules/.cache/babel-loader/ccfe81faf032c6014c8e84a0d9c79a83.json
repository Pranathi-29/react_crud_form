{"ast":null,"code":"var _jsxFileName = \"D:\\\\ps\\\\React forms\\\\punjab_datab\\\\front\\\\src\\\\example.js\";\nimport React from \"react\";\nimport Admin from \"react-crud-admin\";\nimport Form from \"react-jsonschema-form\";\nimport axios from \"axios\";\nimport \"react-crud-admin/css\"; //optional css import\n\nexport default class Example extends Admin {\n  constructor() {\n    super();\n    this.name = \"Tenant\";\n    this.name_plural = \"Tenants\";\n    this.list_display_links = [\"name\"];\n    this.list_display = [\"name\", \"code\", \"emailId\", \"districtName\"];\n    this.pages_in_pagination = 20;\n  }\n\n  get_queryset(page_number, list_per_page, queryset) {\n    axios.get(\"/list\").then(response => {\n      this.set_queryset(response.data);\n    });\n    return queryset;\n  }\n\n  get_form(object = null) {\n    let schema = {\n      '$schema': 'http://json-schema.org/schema#',\n      'type': 'object',\n      'properties': {\n        'tenantId': {\n          'type': 'string',\n          'default': 'pb'\n        },\n        'moduleName': {\n          'type': 'string',\n          'default': 'tenant'\n        },\n        'tenants': {\n          'type': 'object',\n          'properties': {\n            'code': {\n              'type': 'string'\n            },\n            'name': {\n              'type': 'string'\n            },\n            'description': {\n              'type': 'string'\n            },\n            'logoId': {\n              'type': 'string'\n            },\n            'imageId': {\n              'type': 'null'\n            },\n            'domainUrl': {\n              'type': ['null', 'string']\n            },\n            'type': {\n              'type': 'string'\n            },\n            'twitterUrl': {\n              'type': ['null', 'string']\n            },\n            'facebookUrl': {\n              'type': ['null', 'string']\n            },\n            'emailId': {\n              'type': ['null', 'string']\n            },\n            'OfficeTimings': {\n              'type': 'object',\n              'properties': {\n                'Mon - Fri': {\n                  'type': 'string'\n                }\n              },\n              'required': ['Mon - Fri']\n            },\n            'city': {\n              'type': 'object',\n              'properties': {\n                'name': {\n                  'type': 'string'\n                },\n                'localName': {\n                  'type': 'string'\n                },\n                'districtCode': {\n                  'type': 'string'\n                },\n                'districtName': {\n                  'type': 'string'\n                },\n                'districtTenantCode': {\n                  'type': 'string'\n                },\n                'regionName': {\n                  'type': 'string'\n                },\n                'ulbGrade': {\n                  'type': ['null', 'string']\n                },\n                'longitude': {\n                  'type': 'number'\n                },\n                'latitude': {\n                  'type': 'number'\n                },\n                'shapeFileLocation': {\n                  'type': 'null'\n                },\n                'captcha': {\n                  'type': 'null'\n                },\n                'code': {\n                  'type': 'string'\n                },\n                'regionCode': {\n                  'type': 'string'\n                },\n                'municipalityName': {\n                  'type': 'string'\n                },\n                'ddrName': {\n                  'type': ['null', 'string']\n                },\n                'required': ['captcha', 'code', 'ddrName', 'districtCode', 'districtName', 'districtTenantCode', 'latitude', 'localName', 'longitude', 'name', 'regionName', 'shapeFileLocation', 'ulbGrade']\n              },\n              'address': {\n                'type': 'string'\n              },\n              'contactNumber': {\n                'type': ['null', 'string']\n              }\n            },\n            'required': ['OfficeTimings', 'address', 'city', 'code', 'contactNumber', 'description', 'domainUrl', 'emailId', 'facebookUrl', 'imageId', 'logoId', 'name', 'twitterUrl', 'type']\n          }\n        }\n      },\n      'required': ['moduleName', 'tenantId', 'tenants']\n    };\n\n    if (!object) {\n      return /*#__PURE__*/React.createElement(Form, {\n        schema: schema,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(Form, {\n        schema: schema,\n        formData: object,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n}","map":{"version":3,"sources":["D:/ps/React forms/punjab_datab/front/src/example.js"],"names":["React","Admin","Form","axios","Example","constructor","name","name_plural","list_display_links","list_display","pages_in_pagination","get_queryset","page_number","list_per_page","queryset","get","then","response","set_queryset","data","get_form","object","schema"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Admin from \"react-crud-admin\";\r\nimport Form from \"react-jsonschema-form\";\r\nimport axios from \"axios\";\r\n\r\nimport \"react-crud-admin/css\"; //optional css import\r\n\r\nexport default class Example extends Admin {\r\n  constructor() {\r\n    super();\r\n    this.name = \"Tenant\";\r\n    this.name_plural = \"Tenants\";\r\n    this.list_display_links = [\"name\"];\r\n    this.list_display = [\"name\",\"code\",\"emailId\", \"districtName\"];\r\n  \r\n    this.pages_in_pagination = 20;\r\n    \r\n  }\r\n\r\n  get_queryset(page_number, list_per_page, queryset) {\r\n    axios.get(\"/list\").then(response => {\r\n  \r\n        \r\n        this.set_queryset(response.data);\r\n      \r\n    });\r\n\r\n  return queryset;\r\n   \r\n\r\n  }\r\n  \r\n  get_form(object = null) {\r\n    let schema ={'$schema': 'http://json-schema.org/schema#', \r\n    'type': 'object',\r\n     'properties': \r\n     {'tenantId': {'type': 'string',\r\n    'default':'pb'}, \r\n     'moduleName': {'type': 'string',\r\n     'default':'tenant'}, \r\n     'tenants':\r\n      \r\n      \r\n        {'type': 'object', 'properties':\r\n        {'code': {'type': 'string'}, \r\n        'name': {'type': 'string'}, \r\n        'description': {'type': 'string'}, \r\n        'logoId': {'type': 'string'}, \r\n        'imageId': {'type': 'null'}, \r\n        'domainUrl': {'type': ['null', 'string']}, \r\n        'type': {'type': 'string'}, \r\n        'twitterUrl': {'type': ['null', 'string']}, \r\n        'facebookUrl': {'type': ['null', 'string']}, \r\n        'emailId': {'type': ['null', 'string']}, \r\n        'OfficeTimings': \r\n        {'type': 'object', \r\n        'properties': {'Mon - Fri': {'type': 'string'}}, \r\n        'required': ['Mon - Fri']}, \r\n        'city': \r\n        {'type': 'object', \r\n        'properties': {'name': {'type': 'string'}, \r\n        'localName': {'type': 'string'}, \r\n        'districtCode': {'type': 'string'}, \r\n        'districtName': {'type': 'string'}, \r\n        'districtTenantCode': {'type': 'string'},\r\n         'regionName': {'type': 'string'}, \r\n         'ulbGrade': {'type': ['null', 'string']}, \r\n         'longitude': {'type': 'number'}, \r\n         'latitude': {'type': 'number'}, \r\n         'shapeFileLocation': {'type': 'null'}, \r\n         'captcha': {'type': 'null'}, \r\n         'code': {'type': 'string'}, \r\n         'regionCode': {'type': 'string'}, \r\n         'municipalityName': {'type': 'string'}, \r\n         'ddrName': {'type': ['null', 'string']}, \r\n         'required': ['captcha', 'code', 'ddrName', 'districtCode', 'districtName', 'districtTenantCode', 'latitude', 'localName', 'longitude', 'name', 'regionName', 'shapeFileLocation', 'ulbGrade']}, 'address': {'type': 'string'}, 'contactNumber': {'type': ['null', 'string']}}, 'required': ['OfficeTimings', 'address', 'city', 'code', 'contactNumber', 'description', 'domainUrl', 'emailId', 'facebookUrl', 'imageId', 'logoId', 'name', 'twitterUrl', 'type']}}}, \r\n    'required': ['moduleName', 'tenantId', 'tenants']};\r\n\r\n    if (!object) {\r\n      return <Form schema={schema} />;\r\n    } else {\r\n      return <Form schema={schema} formData={object} />;\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}