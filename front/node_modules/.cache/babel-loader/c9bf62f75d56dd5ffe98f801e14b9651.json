{"ast":null,"code":"var _jsxFileName = \"D:\\\\ps\\\\React forms\\\\up\\\\front\\\\src\\\\ui.js\";\nimport React from \"react\";\nimport Admin from \"react-crud-admin\";\nimport Form from \"react-jsonschema-form\";\nimport axios from \"axios\";\nimport \"react-crud-admin/css\"; //optional css import\n\nexport default class Example extends Admin {\n  constructor() {\n    super();\n    this.name = \"Tenant\";\n    this.name_plural = \"Tenants\";\n    this.list_display_links = [\"name\"];\n    this.list_display = [\"name\", \"code\", \"emailId\", \"city.districtName\"];\n    this.pages_in_pagination = 20;\n  }\n\n  get_queryset(page_number, list_per_page, queryset) {\n    let backend = \"/masters/pb/tenant/tenants\";\n    let path = backend + \"&limit=\" + list_per_page + \"&skip=\" + (page_number - 1) * list_per_page;\n    axios.get(\"/masters/pb/tenant/tenants\").then(response => {\n      this.set_queryset(response.data);\n      this.set_total(response.total);\n      console.log(\"You is amazee!\");\n    });\n    return queryset;\n  }\n\n  form_submit(form) {\n    let tenant = form.formData;\n\n    if (form.edit) {\n      console.log(\"This is a edit\", tenant);\n      this.state.queryset.splice(this.state.queryset.indexOf(this.state.object), 1, tenant); //var ind=this.state.queryset.indexOf(this.state.object);\n      //console.log(ind);\n\n      this.response_change(tenant);\n    } else {\n      this.response_add(tenant);\n    }\n  }\n\n  response_add(d) {\n    console.log(d);\n    axios.post(\"/masters/pb/tenant/tenants/add\", {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: d\n    }).then(response => {\n      this.set_queryset(response.data);\n      console.log(typeof response.data);\n      console.log(response.data);\n    });\n    this.setState({\n      object: null,\n      queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\n    });\n  }\n\n  response_change(d) {\n    console.log(d);\n    axios.post(\"/masters/pb/tenant/tenants/update\", {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: d\n    }).then(response => {\n      this.set_queryset(response.data);\n      console.log(typeof response.data);\n      console.log(response.data);\n    });\n    this.setState({\n      object: null,\n      queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\n    });\n  }\n\n  get_form(object = null) {\n    let schema = {\n      \"$schema\": \"http://json-schema.org/schema#\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"code\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"emailId\": {\n          \"type\": \"string\"\n        },\n        \"city\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\"\n            },\n            \"districtCode\": {\n              \"type\": \"string\"\n            },\n            \"districtName\": {\n              \"type\": \"string\"\n            },\n            \"code\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\"code\", \"districtCode\", \"districtName\", \"name\"]\n        }\n      }\n    };\n\n    if (!object) {\n      return /*#__PURE__*/React.createElement(Form, {\n        schema: schema,\n        onSubmit: this.form_submit.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 14\n        }\n      });\n    } else {\n      console.log(\"return form with data\", object);\n      return /*#__PURE__*/React.createElement(Form, {\n        schema: schema,\n        formData: object,\n        onSubmit: this.form_submit.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n}","map":{"version":3,"sources":["D:/ps/React forms/up/front/src/ui.js"],"names":["React","Admin","Form","axios","Example","constructor","name","name_plural","list_display_links","list_display","pages_in_pagination","get_queryset","page_number","list_per_page","queryset","backend","path","get","then","response","set_queryset","data","set_total","total","console","log","form_submit","form","tenant","formData","edit","state","splice","indexOf","object","response_change","response_add","d","post","headers","body","setState","get_form","schema","bind"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Admin from \"react-crud-admin\";\r\nimport Form from \"react-jsonschema-form\";\r\nimport axios from \"axios\";\r\n\r\nimport \"react-crud-admin/css\"; //optional css import\r\n\r\nexport default class Example extends Admin {\r\n  constructor() {\r\n    super();\r\n    this.name = \"Tenant\";\r\n    this.name_plural = \"Tenants\";\r\n    this.list_display_links = [\"name\"];\r\n    this.list_display = [\"name\", \"code\", \"emailId\", \"city.districtName\"];\r\n\r\n    this.pages_in_pagination = 20;\r\n\r\n  }\r\n\r\n\r\n  get_queryset(page_number, list_per_page, queryset) {\r\n    let backend = \"/masters/pb/tenant/tenants\";\r\n    let path =\r\n    backend +\r\n    \"&limit=\" +\r\n    list_per_page +\r\n    \"&skip=\" +\r\n    (page_number - 1) * list_per_page;\r\n    axios.get(\"/masters/pb/tenant/tenants\").then(response => {\r\n\r\n\r\n      this.set_queryset(response.data);\r\n      this.set_total(response.total);\r\n      console.log(\"You is amazee!\");\r\n\r\n    });\r\n\r\n    return queryset;\r\n\r\n\r\n  }\r\n\r\n  form_submit(form) {\r\n    let tenant = form.formData;\r\n\r\n    if (form.edit) {\r\n      console.log(\"This is a edit\", tenant)\r\n      this.state.queryset.splice(this.state.queryset.indexOf(this.state.object), 1, tenant);\r\n\r\n      //var ind=this.state.queryset.indexOf(this.state.object);\r\n      //console.log(ind);\r\n      this.response_change(tenant);\r\n    }\r\n    else {\r\n\r\n      this.response_add(tenant);\r\n    }\r\n  }\r\n\r\n\r\n  response_add(d) {\r\n    console.log(d);\r\n    axios.post(\"/masters/pb/tenant/tenants/add\", {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: d\r\n    }).then(response => {\r\n\r\n\r\n      this.set_queryset(response.data);\r\n\r\n      console.log(typeof (response.data));\r\n      console.log(response.data);\r\n\r\n    });\r\n\r\n    this.setState({\r\n      object: null,\r\n      queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\r\n    });\r\n  }\r\n\r\n  response_change(d) {\r\n    console.log(d);\r\n    axios.post(\"/masters/pb/tenant/tenants/update\", {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: d\r\n    }).then(response => {\r\n\r\n\r\n      this.set_queryset(response.data);\r\n\r\n      console.log(typeof (response.data));\r\n      console.log(response.data);\r\n\r\n    });\r\n    this.setState({\r\n      object: null,\r\n      queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\r\n    });\r\n  }\r\n\r\n  get_form(object = null) {\r\n    let schema = {\r\n      \"$schema\": \"http://json-schema.org/schema#\",\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"code\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"emailId\": {\r\n          \"type\": \"string\"\r\n        },\r\n      \r\n      \r\n      \"city\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"districtCode\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"districtName\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"code\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        \"required\": [\r\n          \"code\",\r\n          \"districtCode\",\r\n          \"districtName\",\r\n          \"name\"\r\n        ]\r\n      }\r\n      }\r\n    };\r\n\r\n    if (!object) {\r\n      return <Form schema={schema} onSubmit={this.form_submit.bind(this)} />;\r\n    } else {\r\n      console.log(\"return form with data\", object);\r\n      return <Form schema={schema} formData={object} onSubmit={this.form_submit.bind(this)} />;\r\n    }\r\n  }\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}