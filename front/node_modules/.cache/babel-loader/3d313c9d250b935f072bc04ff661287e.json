{"ast":null,"code":"var _jsxFileName = \"D:\\\\ps\\\\React forms\\\\up\\\\front\\\\src\\\\ui.js\";\nimport React from \"react\";\nimport Admin from \"react-crud-admin\";\nimport Form from \"react-jsonschema-form\";\nimport axios from \"axios\";\nimport \"react-crud-admin/css\"; //optional css import\n\nfunction paginate(array, page_size, page_number) {\n  // human-readable page numbers usually start with 1, so we reduce 1 in the first argument\n  return array.slice((page_number - 1) * page_size, page_number * page_size);\n}\n\nexport default class Example extends Admin {\n  constructor() {\n    super();\n    this.name = \"Tenant\";\n    this.name_plural = \"Tenants\";\n    this.list_display_links = [\"name\"];\n    this.list_display = [\"name\", \"code\", \"emailId\", \"city.districtName\"];\n    this.list_per_page = 10;\n  }\n\n  get_queryset(page_number, list_per_page, queryset) {\n    axios.get(\"/masters/pb/tenant/tenants\").then(response => {\n      let data = paginate(response.data, list_per_page, page_number);\n      this.set_queryset(data);\n      this.set_total(response.data.length);\n      this.pages_in_pagination = response.data.length / list_per_page;\n      console.log(\"You is amazee!\");\n    });\n    return queryset;\n  }\n\n  form_submit(form) {\n    let tenant = form.formData;\n\n    if (form.edit) {\n      console.log(\"This is a edit\", tenant);\n      this.state.queryset.splice(this.state.queryset.indexOf(this.state.object), 1, tenant); //var ind=this.state.queryset.indexOf(this.state.object);\n      //console.log(ind);\n\n      this.response_change(tenant);\n    } else {\n      this.response_add(tenant);\n    }\n  }\n\n  response_add(d) {\n    console.log(d);\n    axios.post(\"/masters/pb/tenant/tenants/add\", {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: d\n    }).then(response => {\n      this.set_queryset(response.data);\n      console.log(typeof response.data);\n      console.log(response.data);\n    });\n    this.setState({\n      object: null,\n      queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\n    });\n  }\n\n  response_change(d) {\n    console.log(d);\n    axios.post(\"/masters/pb/tenant/tenants/update\", {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: d\n    }).then(response => {\n      this.set_queryset(response.data);\n      console.log(typeof response.data);\n      console.log(response.data);\n    });\n    this.setState({\n      object: null,\n      queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\n    });\n  }\n\n  get_actions() {\n    return {\n      \"delete\": selected_objects => {\n        console.log(selected_objects);\n        axios.post(\"/masters/pb/tenant/tenants/delete\", {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: selected_objects\n        }).then(response => {\n          this.set_queryset(response.data);\n          console.log(typeof response.data);\n          console.log(response.data);\n        }); //this.set_queryset(this.get_queryset());\n\n        this.setState({\n          queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\n        });\n      }\n    };\n  }\n\n  render_list_view() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, this.render_add_button(), this.render_below_add_button(), this.render_search_field(), this.render_below_search_field(), this.render_actions(), this.render_below_actions(), this.render_filters(), this.render_below_filters(), this.render_table(), this.render_add_button(), this.render_below_table(), this.render_progress(this.state.loading), this.render_below_progress(), this.render_pagination());\n  }\n\n  render_pagination() {\n    let pages = [];\n\n    if (this.state.total) {\n      let numpages = Math.ceil(this.state.total / this.get_list_per_page());\n      let pages_in_pagination = numpages < this.pages_in_pagination ? numpages : this.pages_in_pagination;\n\n      if (this.state.page_number == 1) {\n        for (let i = 0; i < pages_in_pagination; i++) {\n          pages.push(i + 1);\n        }\n      } else if (this.state.page_number == numpages) {\n        for (let i = 0; i < pages_in_pagination; i++) {\n          pages.push(numpages - i);\n        }\n      } else {\n        for (let i = 0; i < pages_in_pagination; i++) {\n          pages.push(this.state.page_number + i);\n        }\n      }\n      /*\r\n      for(var i=0;i<numpages;i++)\r\n      {\r\n      pages.push(i+1);\r\n        }*/\n\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pull-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"summary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }\n    }, this.get_list_per_page() * (this.state.page_number - 1) + 1, \"-\", Math.min(this.get_list_per_page() * (this.state.page_number - 1) + this.get_list_per_page(), this.state.total), \" \", \"of \", this.state.total, \" \"), /*#__PURE__*/React.createElement(\"nav\", {\n      \"aria-label\": \"Page navigation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"pagination\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      key: \"left\",\n      className: \"page-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/\",\n      \"aria-label\": \"Previous\",\n      onClick: this.prevPage.bind(this),\n      className: \"page-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, \"\\xAB\"))), pages.map(page => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: page,\n        className: \"page-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/\",\n        className: \"page-link\",\n        onClick: this.selectPage({\n          page\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 19\n        }\n      }, page));\n    }), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"page-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/\",\n      key: \"right\",\n      onClick: this.nextPage.bind(this),\n      \"aria-label\": \"Next\",\n      className: \"page-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }, \"\\xBB\"))))));\n  }\n\n  get_form(object = null) {\n    let schema = {\n      \"$schema\": \"http://json-schema.org/schema#\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"code\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"emailId\": {\n          \"type\": \"string\"\n        },\n        \"city\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\"\n            },\n            \"districtCode\": {\n              \"type\": \"string\"\n            },\n            \"districtName\": {\n              \"type\": \"string\"\n            },\n            \"code\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\"code\", \"districtCode\", \"districtName\", \"name\"]\n        }\n      }\n    };\n\n    if (!object) {\n      return /*#__PURE__*/React.createElement(Form, {\n        schema: schema,\n        onSubmit: this.form_submit.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 14\n        }\n      });\n    } else {\n      console.log(\"return form with data\", object);\n      return /*#__PURE__*/React.createElement(Form, {\n        schema: schema,\n        formData: object,\n        onSubmit: this.form_submit.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n}","map":{"version":3,"sources":["D:/ps/React forms/up/front/src/ui.js"],"names":["React","Admin","Form","axios","paginate","array","page_size","page_number","slice","Example","constructor","name","name_plural","list_display_links","list_display","list_per_page","get_queryset","queryset","get","then","response","data","set_queryset","set_total","length","pages_in_pagination","console","log","form_submit","form","tenant","formData","edit","state","splice","indexOf","object","response_change","response_add","d","post","headers","body","setState","get_actions","selected_objects","render_list_view","render_add_button","render_below_add_button","render_search_field","render_below_search_field","render_actions","render_below_actions","render_filters","render_below_filters","render_table","render_below_table","render_progress","loading","render_below_progress","render_pagination","pages","total","numpages","Math","ceil","get_list_per_page","i","push","min","prevPage","bind","map","page","selectPage","nextPage","get_form","schema"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Admin from \"react-crud-admin\";\r\nimport Form from \"react-jsonschema-form\";\r\nimport axios from \"axios\";\r\n\r\nimport \"react-crud-admin/css\"; //optional css import\r\n\r\nfunction paginate(array, page_size, page_number) {\r\n  // human-readable page numbers usually start with 1, so we reduce 1 in the first argument\r\n  return array.slice((page_number - 1) * page_size, page_number * page_size);\r\n}\r\n\r\n\r\nexport default class Example extends Admin {\r\n  constructor() {\r\n    super();\r\n    this.name = \"Tenant\";\r\n    this.name_plural = \"Tenants\";\r\n    this.list_display_links = [\"name\"];\r\n    this.list_display = [\"name\", \"code\", \"emailId\", \"city.districtName\"];\r\n\r\n    this.list_per_page = 10;\r\n\r\n  }\r\n\r\n\r\n  get_queryset(page_number, list_per_page, queryset) {\r\n\r\n\r\n    axios.get(\"/masters/pb/tenant/tenants\").then(response => {\r\n\r\n      let data = paginate(response.data, list_per_page, page_number)\r\n      this.set_queryset(data);\r\n      this.set_total(response.data.length);\r\n      this.pages_in_pagination = response.data.length / list_per_page;\r\n      console.log(\"You is amazee!\");\r\n\r\n    });\r\n\r\n    return queryset;\r\n\r\n\r\n  }\r\n\r\n  form_submit(form) {\r\n    let tenant = form.formData;\r\n\r\n    if (form.edit) {\r\n      console.log(\"This is a edit\", tenant)\r\n      this.state.queryset.splice(this.state.queryset.indexOf(this.state.object), 1, tenant);\r\n\r\n      //var ind=this.state.queryset.indexOf(this.state.object);\r\n      //console.log(ind);\r\n      this.response_change(tenant);\r\n    }\r\n    else {\r\n\r\n      this.response_add(tenant);\r\n    }\r\n  }\r\n\r\n\r\n  response_add(d) {\r\n    console.log(d);\r\n    axios.post(\"/masters/pb/tenant/tenants/add\", {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: d\r\n    }).then(response => {\r\n\r\n\r\n      this.set_queryset(response.data);\r\n\r\n      console.log(typeof (response.data));\r\n      console.log(response.data);\r\n\r\n    });\r\n\r\n    this.setState({\r\n      object: null,\r\n      queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\r\n    });\r\n  }\r\n\r\n  response_change(d) {\r\n    console.log(d);\r\n    axios.post(\"/masters/pb/tenant/tenants/update\", {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: d\r\n    }).then(response => {\r\n\r\n\r\n      this.set_queryset(response.data);\r\n\r\n      console.log(typeof (response.data));\r\n      console.log(response.data);\r\n\r\n    });\r\n    this.setState({\r\n      object: null,\r\n      queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\r\n    });\r\n  }\r\n\r\n  get_actions() {\r\n    return {\r\n      \"delete\": (selected_objects) => {\r\n        console.log(selected_objects);\r\n\r\n        axios.post(\"/masters/pb/tenant/tenants/delete\", {\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: selected_objects\r\n        }).then(response => {\r\n\r\n\r\n          this.set_queryset(response.data);\r\n          console.log(typeof (response.data));\r\n          console.log(response.data);\r\n\r\n        })\r\n\r\n\r\n        //this.set_queryset(this.get_queryset());\r\n        this.setState({\r\n\r\n          queryset: this.get_queryset(this.state.page_number, this.list_per_page, this.state.queryset)\r\n        });\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n  render_list_view() {\r\n    return (\r\n      <div>\r\n        {this.render_add_button()}\r\n        {this.render_below_add_button()}\r\n        {this.render_search_field()}\r\n        {this.render_below_search_field()}\r\n        {this.render_actions()}\r\n        {this.render_below_actions()}\r\n        {this.render_filters()}\r\n        {this.render_below_filters()}\r\n        {this.render_table()}\r\n        {this.render_add_button()}\r\n        {this.render_below_table()}\r\n        {this.render_progress(this.state.loading)}\r\n        {this.render_below_progress()}\r\n        {this.render_pagination()}\r\n      </div>\r\n    );\r\n  }\r\n  render_pagination() {\r\n    let pages = [];\r\n    if (this.state.total) {\r\n      let numpages = Math.ceil(this.state.total / this.get_list_per_page());\r\n      let pages_in_pagination =\r\n        numpages < this.pages_in_pagination\r\n          ? numpages\r\n          : this.pages_in_pagination;\r\n \r\n      if (this.state.page_number == 1) {\r\n        for (let i = 0; i < pages_in_pagination; i++) {\r\n          pages.push(i + 1);\r\n        }\r\n      } else if (this.state.page_number == numpages) {\r\n        for (let i = 0; i < pages_in_pagination; i++) {\r\n          pages.push(numpages - i);\r\n        }\r\n      } else {\r\n        for (let i = 0; i < pages_in_pagination; i++) {\r\n          pages.push(this.state.page_number + i);\r\n        }\r\n      }\r\n      /*\r\n\t\tfor(var i=0;i<numpages;i++)\r\n\t    {\r\n\t\tpages.push(i+1);\r\n \r\n\t    }*/\r\n    }\r\n \r\n    return (\r\n      <div className=\"pull-right\">\r\n        <span className=\"summary\">\r\n          {this.get_list_per_page() * (this.state.page_number - 1) + 1}-\r\n          {Math.min(\r\n            this.get_list_per_page() * (this.state.page_number - 1) +\r\n              this.get_list_per_page(),\r\n            this.state.total\r\n          )}{\" \"}\r\n          of {this.state.total}{\" \"}\r\n        </span>\r\n \r\n        <nav aria-label=\"Page navigation\">\r\n          <ul className=\"pagination\">\r\n            <li key={\"left\"} className=\"page-item\">\r\n              <a\r\n                href=\"/\"\r\n                aria-label=\"Previous\"\r\n                onClick={this.prevPage.bind(this)}\r\n                className=\"page-link\"\r\n              >\r\n                <span aria-hidden=\"true\">&laquo;</span>\r\n              </a>\r\n            </li>\r\n \r\n            {pages.map(page => {\r\n              return (\r\n                <li key={page} className=\"page-item\">\r\n                  <a\r\n                    href=\"/\"\r\n                    className=\"page-link\"\r\n                    onClick={this.selectPage({ page })}\r\n                  >\r\n                    {page}\r\n                  </a>\r\n                </li>\r\n              );\r\n            })}\r\n            <li className=\"page-item\">\r\n              <a\r\n                href=\"/\"\r\n                key={\"right\"}\r\n                onClick={this.nextPage.bind(this)}\r\n                aria-label=\"Next\"\r\n                className=\"page-link\"\r\n              >\r\n                <span aria-hidden=\"true\">&raquo;</span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  get_form(object = null) {\r\n    let schema = {\r\n      \"$schema\": \"http://json-schema.org/schema#\",\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"code\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"emailId\": {\r\n          \"type\": \"string\"\r\n        },\r\n\r\n\r\n        \"city\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"name\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"districtCode\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"districtName\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"code\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"required\": [\r\n            \"code\",\r\n            \"districtCode\",\r\n            \"districtName\",\r\n            \"name\"\r\n          ]\r\n        }\r\n      }\r\n    };\r\n\r\n    if (!object) {\r\n      return <Form schema={schema} onSubmit={this.form_submit.bind(this)} />;\r\n    } else {\r\n      console.log(\"return form with data\", object);\r\n      return <Form schema={schema} formData={object} onSubmit={this.form_submit.bind(this)} />;\r\n    }\r\n  }\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}